name: 🧱🏭 Stable Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: read

jobs:
  calc-version-for-assemblies:
    runs-on: ubuntu-latest
    outputs:
      version_name_for_assemblies: ${{ steps.calc-tag-name.outputs.version_name_for_assemblies }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Calculate Version for Assemblies
        id: calc-tag-name
        run: |
          # e.g. sed will transform "v3.7.0" into "3.7.0"
          version_name_for_assemblies=$(echo ${GITHUB_REF_NAME} | sed -E 's/v?([0-9]{1,5})\.([0-9]{1,5})\.([0-9]{1,5})/\1.\2.\3/')

          if [ "$version_name_for_assemblies" == "$next_version_name_for_tags" ]; then
            >&2 echo "Failed to create the version string for the ASI and the scripting DLLs because the version tag is ill-formed as a stable version tag. Tag name: ${version_name_for_assemblies}"
            exit 1
          fi

          echo "version_name_for_assemblies=${version_name_for_assemblies}" >> "$GITHUB_OUTPUT"
          exit 0

  build:
    needs: calc-version-for-assemblies
    uses: ./.github/workflows/build.yml
    with:
        build-version: ${{needs.calc-version-for-assemblies.outputs.version_name_for_assemblies}}

  create-release-draft:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Download artifact from build Workflow
        uses: actions/download-artifact@v4.1.7
        with:
          name: ScriptHookVDotNet
          path: bin/Release
      - run: ls -R
        working-directory: bin/Release
      - name: Pack build
        run: |
          artifact_name="ScriptHookVDotNet-${GITHUB_REF_NAME}"
          artifact_file_name="${artifact_name}.zip"
          echo "artifact_name=${artifact_name}" >> $GITHUB_ENV
          echo "artifact_filename=${artifact_file_name}" >> $GITHUB_ENV
          cd "${GITHUB_WORKSPACE}/bin/Release"
          zip -r "${GITHUB_WORKSPACE}/${artifact_file_name}" *
      - name: Push new release
        uses: ncipollo/release-action@v1.14.0
        with:
          # should add a boilerplate body text to save our time
          name: ${{ env.artifact_name }}
          artifacts: |
            ${{ env.artifact_filename }}
          draft: true
          artifactErrorsFailBuild: true
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          token: ${{ secrets.RELEASE_TOKEN_GITHUB }}
